name: Main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  format_and_lint_rust:
    name: Format & Lint Rust
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [discriminator, generic-token, generic-token-tests, pod, program-error, tlv-account-resolution, type-length-value, type-length-value-derive-test]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          clippy: true
          rustfmt: true

      - name: Format
        run: pnpm ${{ matrix.library }}:format

      - name: Lint
        run: pnpm ${{ matrix.library }}:lint

  format_and_lint_js:
    name: Format & Lint JS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [type-length-value]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Format
        run: pnpm ${{ matrix.library }}:js:format

      - name: Lint
        run: pnpm ${{ matrix.library }}:js:lint

  audit_rust:
    name: Audit Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-audit

      - name: Install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit

      - name: Run cargo-audit
        run: pnpm rust:audit

  spellcheck_rust:
    name: Spellcheck Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-spellcheck

      - name: Install cargo-spellcheck
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-spellcheck

      - name: Run cargo-spellcheck
        run: pnpm rust:spellcheck

  build_sbf:
    name: Build SBF
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [discriminator, generic-token, pod, program-error, tlv-account-resolution, type-length-value, type-length-value-derive-test]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-build-${{ matrix.library }}
          solana: true

      - name: Build
        run: pnpm ${{ matrix.library }}:build

  hack_rust:
    name: Check Powerset
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          nightly-toolchain: true
          cargo-cache-key: cargo-hack-check
          cargo-cache-fallback-key: cargo-hack

      - name: Install cargo-hack
        uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cargo-hack

      - name: Hack check
        run: pnpm rust:hack

  test_rust:
    name: Test Rust
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [discriminator, generic-token, generic-token-tests, pod, program-error, tlv-account-resolution, type-length-value, type-length-value-derive-test]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-${{ matrix.library }}-tests
          cargo-cache-fallback-key: cargo-${{ matrix.library }}

      - name: Test
        run: pnpm ${{ matrix.library }}:test

  test_js:
    name: Test JS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [type-length-value]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Test
        run: pnpm ${{ matrix.library }}:js:test
